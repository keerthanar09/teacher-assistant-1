generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       Int    @id @default(autoincrement())
  username     String
  email    String @unique
  password String
  role     String  
  
  // Relations
  roomsCreated Room[] @relation("TeacherRooms")
  rooms     Room[] @relation("UserRooms") // Users (both teacher & student) can belong to rooms
  quizzes   Quiz[] @relation("TeacherQuizzes") // Only for teachers
  quizTakens QuizTaken[]

}


model Room {
  id          Int    @id @default(autoincrement())
  createdBy   User   @relation(fields:[createdById], references:[id], name: "TeacherRooms")
  createdById Int
  capacity    Int
  name        String
  code        String @unique
  students    User[] @relation("UserRooms")
}

model Quiz {
  formId      String @id
  title       String
  subject     String
  createdAt   DateTime @default(now())
  createdBy   User  @relation(fields:[createdById], references:[id], name: "TeacherQuizzes") 
  createdById Int
  quizTakens  QuizTaken[]
}

model QuizTaken {
  id         Int  @id @default(autoincrement())
  user       User @relation(fields:[userId], references:[id])
  userId     Int
  quiz       Quiz @relation(fields:[quizId], references:[formId])
  quizId     String
  grades     Decimal
}

model Verification {
  id        String   @id @default(uuid()) 
  email     String  @unique
  code      String
  expiresAt DateTime
}